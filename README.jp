■ iPhone SDK 用 O/R マッパー

iPhone SDK 用の O/R マッパーツールです。

データベース定義 (schema) から自動的にモデルを生成します。


○ 使い方

データベース定義のサンプルが sample-schema.def にあります。
以下のようにすることでモデルを生成できます。

 $ ./generate.rb sample-schema.def

sample.m とモデルのソースを見ればだいたい使い方はわかると思います。

最初に [Database instance] を呼び出してデータベースのインス
タンスを作成し、open メソッドを呼び出してデータベースを
作成・ロードします。

次に各モデルの migrate メソッドを呼び出してテーブルの作成・
マイグレーションを行います。

テーブルの読み込みには find_all, find_cond のメソッドを
使います。これらのメソッドはモデルの NSMutableArray 配列
を返します。

特定の ID を持つレコードを読み出したい場合は find メソッド
を使ってください。

レコードの作成、保存を行う場合は、モデルのインスタンスを
生成し、save メソッドを呼ぶだけです。

レコードの削除は delete で行います。


○ schema について

schema は以下のように記述します

----
モデル名
        型: カラム名
        ...

モデル名
        型: カラム名
        ...
----

「モデル名」と同じ名前でモデルクラスが生成されます。
ファイル名は "モデル名.h", "モデル名.m" になります。
また、SQL テーブル名はクラス名と同じ名前になります。
(RoR のように複数形にしたりはしません)

型には SQLite のデータ型を指定します。今のところサポートしている
型、およびこれに対応する Objective-C の型は以下の通りです。

   SQL type   Obj-C type
   -----------------------
   INTEGER    int
   REAL       double
   TEXT       NSString *
   DATE       NSDate *

カラム名に指定した名前で、モデルクラスのプロパティが自動的に作成
されます。


○ テーブルの migrate について

schema にフィールドを追加した場合、migrate メソッドを呼び出した
ときに自動的にカラムが追加されます。

ただし、既存のフィールドを変更したり途中のフィールドを変更した
場合は対応できませんので、注意してください。


○ ライセンスについて

libs 以下のファイルは BSD ライセンスに準じます。

本ジェネレータで生成されたソースコードについては、ライセンス条件
は一切つきません (Public Domain とお考えください)

○ TODO

- テストクラスの自動生成


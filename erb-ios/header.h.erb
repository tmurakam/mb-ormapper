// Generated by O/R mapper generator ver <%= VER %>

#import <UIKit/UIKit.h>
#import "ORRecord.h"

@class <%= cdef.class_name %>;

@interface <%= cdef.base_class_name %> : ORRecord {
<%
  cdef.members.each do |m|
    type, mem = getObjcType(m.type)
-%>
    <%= type %> <%= m.member_name %>;
<% end -%>
}

<%
  cdef.members.each do |m|
    type, mem = getObjcType(m.type)
-%>
@property(nonatomic,<%= mem %>) <%= type %> <%= m.prop_name %>;
<% end -%>

+ (BOOL)migrate;

// CRUD (Create/Read/Update/Delete) operations

// Create/update operations
// Note: You should use 'save' method
- (void)_insert;
- (void)_update;

// Read operations (Finder)
+ (<%= cdef.class_name %> *)find:(int)pid;

<%
  cdef.members.each do |m|
    type, mem = getObjcType(m.type)
-%>
+ (<%= cdef.class_name %> *)find_by_<%= m.field_name %>:(<%= type %>)key cond:(NSString*)cond;
+ (<%= cdef.class_name %> *)find_by_<%= m.field_name %>:(<%= type %>)key;
<% end -%>

+ (NSMutableArray *)find_all:(NSString *)cond;

+ (dbstmt *)gen_stmt:(NSString *)cond;
+ (<%= cdef.class_name %> *)find_first_stmt:(dbstmt *)stmt;
+ (NSMutableArray *)find_all_stmt:(dbstmt *)stmt;

// Delete operations
- (void)delete;
+ (void)delete_cond:(NSString *)cond;
+ (void)delete_all;

// Dump SQL
+ (void)getTableSql:(NSMutableString *)s;
- (void)getInsertSql:(NSMutableString *)s;

// internal functions
+ (NSString *)tableName;
- (void)_loadRow:(dbstmt *)stmt;

@end
